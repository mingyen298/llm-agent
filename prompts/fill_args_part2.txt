The content in each task should be in the following format:{"tool":tool_name,"id":task_id,"dep":dependency_task_ids,"args":{}}
The "dep" field denotes the id of the previous task which generates a new resource upon which the current task relies.
If the task's dep is -1, you need to find its args from the user's input.
The tag "<resource>-task_id" represents the generated arg from
the dependency task with the corresponding task_id.
The args of each task must be used according to the description of args in the tool list.
Tool_List:
{{

```json
[
    {
        "api_name": "multiply",
        "description": "Used to multiply two numbers",
        "args": {
            "x": {
                "type": "Int",
                "description": "The number to be multiplied"
            },
            "y": {
                "type": "Int",
                "description": "The number to multiply by"
            }
        },
        "result": {
            "type": "Int",
            "description": "The result after multiplying the two numbers"
        }
    },
    {
        "api_name": "divide",
        "description": "Used to divide one number by another",
        "args": {
            "x": {
                "type": "Int",
                "description": "The number to be divided"
            },
            "y": {
                "type": "Int",
                "description": "The divisor"
            }
        },
        "result": {
            "type": "Int",
            "description": "The result after dividing the two numbers"
        }
    },
    {
        "api_name": "sub",
        "description": "Used to subtract one number from another",
        "args": {
            "x": {
                "type": "Int",
                "description": "The 1st number to be subtracted from"
            },
            "y": {
                "type": "Int",
                "description": "The 2nd number to subtract"
            }
        },
        "result": {
            "type": "Int",
            "description": "The result obtained after subtracting the 2 numbers"
        }
    },
    {
        "api_name": "add",
        "description": "Used to add two input numbers",
        "args": {
            "x": {
                "type": "Int",
                "description": "The 1st number to add"
            },
            "y": {
                "type": "Int",
                "description": "The 2nd number to add"
            }
        },
        "result": {
            "type": "Int",
            "description": "The result obtained after adding the 2 numbers"
        }
    },
    {
        "api_name": "read_csv",
        "description": "Used to read default CSV and select data range.",
        "args": {
            "star": {
                "type": "Int",
                "description": "The start number for data filtering."
            },
            "end": {
                "type": "Int",
                "description": "The end number for data filtering."
            }
        },
        "result": {
            "type": "DataFrame",
            "description": "The data set extracted from the csv file"
        }
    },
    {
        "api_name": "calcul_quantity",
        "description": "To calculate the quantity of a specific column.",
        "args": {
            "data": {
                "type": "DataFrame",
                "description": "The data used for calculation."
            },
            "column": {
                "type": "String",
                "description": "The column used for calculation after selecting from the data.The only valid columns are the following:Product ID,Type,Air temperature [K],Process temperature [K],Rotational speed [rpm],Torque [Nm],Tool wear [min],Target,Failure Type"
            }
        },
        "result": {
            "type": "Dict",
            "description": "The result is the calculated value converted into a dictionary."
        }
    },
    {
        "api_name": "draw_chart",
        "description": "Plotting images based on the received results.",
        "args": {
            "result": {
                "type": "Dict",
                "description": "The result is used to provide data for plotting charts."
            },
            "chart_type": {
                "type": "String",
                "description": "The chart_type specifies the type of chart to plot.The only valid chart_types are the following: bar, line, pie"
            }
        },
        "result": {
            "type": "String",
            "description": "The result will be the path to the generated image."
        }
    }
]
```
}}
Please note that there exists a logical connections and order between the tasks.
In case the user input cannot be parsed, or there is no suitable tool in the tool list ,an empty JSON response should be provided.Here are several cases for your reference:
{{
<USER>:
Calculate 5 multiplied by 100 then subtract 10.
<ASSISTANT>:
[{"tool":"multiply","id":0,"dep":[-1],"args":{"x":5,"y":100}},{"tool":"sub","id":1,"dep":[0],"args":{"x":"<resource>-0","y":10}}]
	
<USER>:
Take 50 to 100 pieces of air temperature data, calculate the number of each temperature, and finally draw it as a bar chart.
<ASSISTANT>:
[{"tool":"read_csv","id":0,"dep":[-1],"args":{"start":50,"end":100}},{"tool":"calcul_quantity","id":1,"dep":[0],"args":{"data":"<resource>-0","column":"Air temperature [K]"}},{"tool":"draw_chart","id":2,"dep":[1],"args":{"result":"<resource>-1","chart_type":"bar"}}]
}}